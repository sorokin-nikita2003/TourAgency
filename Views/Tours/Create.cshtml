@model TourAgency.Models.Tour

@{
    ViewData["Title"] = "Create";
}

<h1>Создать новый тур</h1>

<hr />
<div class="row justify-content-center">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>


            <div class="form-group">
                <label asp-for="TourName" class="control-label">Название тура</label>
                <input asp-for="TourName" class="form-control" />
                <span asp-validation-for="TourName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Price" class="control-label">Стоимость</label>
                <input asp-for="Price" class="form-control" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Country" class="control-label">Страна</label>
                <input asp-for="Country" class="form-control" />
                <span asp-validation-for="Country" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label">Описание</label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            
            <div class="form-group">
                <label asp-for="DateStart" class="control-label">Дата начала</label>
                <input asp-for="DateStart" class="form-control" />
                <span asp-validation-for="DateStart" class="text-danger"></span>
            </div>
            <input type="checkbox" asp-for="HotTour">Горящий тур</input>
            <div class="form-group">
                <input type="submit" value="Создать" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Отменить</a>
</div>

    <script>
        document.querySelector('form').addEventListener('submit', async (event) => {
            event.preventDefault(); // Остановить стандартное поведение отправки формы

            // Получение данных из формы
            const formData = new FormData(event.target);
            const data = {
                TourName: formData.get('TourName'),
                Price: parseFloat(formData.get('Price')),
                Country: formData.get('Country'),
                Description: formData.get('Description'),
                DateStart: formData.get('DateStart'),
                HotTour: formData.get('HotTour') === "on" // Преобразование чекбокса
            };

            console.log("Сформированный JSON:", data);

            try {
                const response = await fetch('https://localhost:7215/Tours/Create', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                });

                if (response.ok) {
                    // Если запрос успешен, перенаправить на список туров
                    alert('Тур успешно создан!');
                    window.location.href = '@Url.Action("Index", "Tours")';
                } else {
                    const error = await response.json();
                    alert(`Ошибка: ${error.message || 'Не удалось создать тур.'}`);
                }
            } catch (error) {
                console.error('Ошибка при отправке запроса:', error);
                alert('Произошла ошибка при отправке данных.');
            }
        });
    </script>
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}